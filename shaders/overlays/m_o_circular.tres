[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://bah4pkpjdkxtt"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jqboc"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_g3cyf"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_w00ro"]
size = Vector2(607.56, 369.286)
expression = "res = sin(sqrt(abs(c.x * c.x - c.y * c.y)) - t * 4.0) > 0.0;"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jorwc"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_l6ah4"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(12, 12)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0acya"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1upkj"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ada3x"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(-0.5, -0.5)]
op_type = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:7
	vec4 n_out7p0 = COLOR;


// Input:2
	float n_out2p0 = TIME;


// Input:5
	vec2 n_out5p0 = UV;


// VectorOp:9
	vec2 n_in9p1 = vec2(-0.50000, -0.50000);
	vec2 n_out9p0 = n_out5p0 + n_in9p1;


// VectorOp:6
	vec2 n_in6p1 = vec2(12.00000, 12.00000);
	vec2 n_out6p0 = n_out9p0 * n_in6p1;


	bool n_out4p0;
// Expression:4
	n_out4p0 = false;
	{
		n_out4p0 = sin(sqrt(abs(n_out6p0.x * n_out6p0.x - n_out6p0.y * n_out6p0.y)) - n_out2p0 * 4.0) > 0.0;
	}


// VectorOp:8
	vec4 n_out8p0 = n_out7p0 * vec4(n_out4p0 ? 1.0 : 0.0);


// Output:0
	COLOR.rgb = vec3(n_out8p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(800, 60)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_jqboc")
nodes/fragment/2/position = Vector2(-420, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_g3cyf")
nodes/fragment/3/position = Vector2(-420, 420)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_w00ro")
nodes/fragment/4/position = Vector2(-80, 100)
nodes/fragment/4/size = Vector2(607.56, 369.286)
nodes/fragment/4/input_ports = "0,0,t;1,3,c;"
nodes/fragment/4/output_ports = "0,6,res;"
nodes/fragment/4/expression = "res = sin(sqrt(abs(c.x * c.x - c.y * c.y)) - t * 4.0) > 0.0;"
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_jorwc")
nodes/fragment/5/position = Vector2(-760, 240)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_l6ah4")
nodes/fragment/6/position = Vector2(-260, 180)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_0acya")
nodes/fragment/7/position = Vector2(106.326, 16.313)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_1upkj")
nodes/fragment/8/position = Vector2(600, 40)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_ada3x")
nodes/fragment/9/position = Vector2(-440, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 6, 0, 4, 1, 4, 0, 8, 1, 7, 0, 8, 0, 8, 0, 0, 0, 5, 0, 9, 0, 9, 0, 6, 0)
