[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://b1p8hheqrlgif"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vya0q"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_2cvlv"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(-0.5, -0.5)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bwyok"]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i6ay7"]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_tlq5l"]
size = Vector2(536.17, 326.66)
expression = "res = vec3(0.0, ceil(sin(sqrt(v.x * v.x + v.y * v.y) + t)) * 0.2, ceil(sin(sqrt(v.x * v.x + v.y * v.y) + t)) * 0.5);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_na4ts"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bsf2s"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7t3c8"]
input_name = "screen_pixel_size"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_jxikd"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1)]
op_type = 0
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:5
	vec4 n_out5p0 = COLOR;


// Input:3
	vec2 n_out3p0 = SCREEN_UV;


// VectorOp:11
	vec2 n_in11p1 = vec2(-0.50000, -0.50000);
	vec2 n_out11p0 = n_out3p0 + n_in11p1;


// Input:8
	vec2 n_out8p0 = SCREEN_PIXEL_SIZE;


// VectorOp:9
	vec2 n_in9p1 = vec2(1.00000, 1.00000);
	vec2 n_out9p0 = n_out8p0 * n_in9p1;


// VectorOp:10
	vec2 n_out10p0 = n_out11p0 / n_out9p0;


// Input:2
	float n_out2p0 = TIME;


	vec3 n_out4p0;
// Expression:4
	n_out4p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out4p0 = vec3(0.0, ceil(sin(sqrt(n_out10p0.x * n_out10p0.x + n_out10p0.y * n_out10p0.y) + n_out2p0)) * 0.2, ceil(sin(sqrt(n_out10p0.x * n_out10p0.x + n_out10p0.y * n_out10p0.y) + n_out2p0)) * 0.5);
	}


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out5p0.xyz) + n_out4p0;


// Output:0
	COLOR.rgb = n_out6p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(780, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_bwyok")
nodes/fragment/2/position = Vector2(-560, 300)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_i6ay7")
nodes/fragment/3/position = Vector2(-1120, -20)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_tlq5l")
nodes/fragment/4/position = Vector2(-160, 160)
nodes/fragment/4/size = Vector2(536.17, 326.66)
nodes/fragment/4/input_ports = "0,3,v;1,0,t;"
nodes/fragment/4/output_ports = "0,4,res;"
nodes/fragment/4/expression = "res = vec3(0.0, ceil(sin(sqrt(v.x * v.x + v.y * v.y) + t)) * 0.2, ceil(sin(sqrt(v.x * v.x + v.y * v.y) + t)) * 0.5);"
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_na4ts")
nodes/fragment/5/position = Vector2(23.6794, 86.2466)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_bsf2s")
nodes/fragment/6/position = Vector2(540, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_7t3c8")
nodes/fragment/8/position = Vector2(-1120, 240)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_jxikd")
nodes/fragment/9/position = Vector2(-800, 240)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_vya0q")
nodes/fragment/10/position = Vector2(-480, 100)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_2cvlv")
nodes/fragment/11/position = Vector2(-700, 40)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 5, 0, 6, 0, 8, 0, 9, 0, 9, 0, 10, 1, 10, 0, 4, 0, 6, 0, 0, 0, 4, 0, 6, 1, 11, 0, 10, 0, 3, 0, 11, 0)
