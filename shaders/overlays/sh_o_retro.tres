[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://bw7378ak0kq4i"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fk2qw"]
input_name = "color"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_l6rt4"]
size = Vector2(720, 380)
expression = "float metric = col.x + col.y + col.z;
if (metric == 0.0) {
	res = vec3(0.0, 1.0, 0.0) * 0.9;
} else {
	res = vec3(0.0, 0.0, 0.0);
}
if (col.a + metric > 1.0) {
	res = vec3(0.0, 1.0, 0.0) * 0.1;
}
alpha = col.a >= 0.6 ? 1.0 : 0.0;"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_va6lt"]
constant = 1.0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


	vec3 n_out3p0;
	float n_out3p1;
// Expression:3
	n_out3p0 = vec3(0.0, 0.0, 0.0);
	n_out3p1 = 0.0;
	{
		float metric = n_out2p0.x + n_out2p0.y + n_out2p0.z;
		if (metric == 0.0) {
			n_out3p0 = vec3(0.0, 1.0, 0.0) * 0.9;
		} else {
			n_out3p0 = vec3(0.0, 0.0, 0.0);
		}
		if (n_out2p0.a + metric > 1.0) {
			n_out3p0 = vec3(0.0, 1.0, 0.0) * 0.1;
		}
		n_out3p1 = n_out2p0.a >= 0.6 ? 1.0 : 0.0;
	}


// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out3p1;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_fk2qw")
nodes/fragment/2/position = Vector2(-820, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_l6rt4")
nodes/fragment/3/position = Vector2(-440, 180)
nodes/fragment/3/size = Vector2(720, 380)
nodes/fragment/3/input_ports = "0,5,col;"
nodes/fragment/3/output_ports = "0,4,res;1,0,alpha;"
nodes/fragment/3/expression = "float metric = col.x + col.y + col.z;
if (metric == 0.0) {
	res = vec3(0.0, 1.0, 0.0) * 0.9;
} else {
	res = vec3(0.0, 0.0, 0.0);
}
if (col.a + metric > 1.0) {
	res = vec3(0.0, 1.0, 0.0) * 0.1;
}
alpha = col.a >= 0.6 ? 1.0 : 0.0;"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_va6lt")
nodes/fragment/4/position = Vector2(280, 380)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 2, 0, 3, 0, 3, 1, 0, 1)
